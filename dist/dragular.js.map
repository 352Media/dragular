{"version":3,"names":[],"mappings":"","sources":["dragular.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"/home/ctibor/projects/adminmode/gulp/node_modules/dragular/dragular.js\":[function(require,module,exports){\n/* global angular */\n'use strict';\n\n/**\n * dragular Module by Luckylooke https://github.com/luckylooke\n *\n * Angular version of dragula https://github.com/bevacqua/dragula\n */\n\nangular.module('dragularModule', []).factory('dragularService', function dragula() {\n\n  var containersNameSpaced = {}, // name-spaced containers\n    containersNameSpacedModel = {}, // name-spaced containers models\n      _mirror; // mirror image\n\n  return function(initialContainers, options) {\n\n    if (arguments.length === 1 && !Array.isArray(initialContainers) && !angular.isElement(initialContainers) && !initialContainers[0]) {\n      // then containers are not provided, only options\n      options = initialContainers;\n      initialContainers = [];\n    }\n\n    var body = document.body,\n      documentElement = document.documentElement,\n      _source, // source container\n      _item, // item being dragged\n      _sourceModel, // source container model\n      _itemModel, // item-model being dragged\n      _targetModel, // target container model\n      _lastTargetModel, // last target container model\n      _targetScope, // target model scope (used for $apply-ing changes in model)\n      _lastTargetScope, // target model scope (used for $apply-ing changes in model)\n      _offsetX, // reference x\n      _offsetY, // reference y\n      _offsetXr, // reference x right for boundingBox feature\n      _offsetYb, // reference y bottom for boundingBox feature\n      _clientX, // cache client x, init at grab, update at drag\n      _clientY, // cache client y, init at grab, update at drag\n      _mirrorWidth, // mirror width for boundingBox feature\n      _mirrorHeight, // mirror height for boundingBox feature\n      _initialSibling, // reference sibling when grabbed\n      _currentSibling, // reference sibling now\n      _initialIndex, // reference model index when grabbed\n      _currentIndex, // reference model index now\n      _lastOverElem, // last element behind the cursor (dragOverClasses feature)\n      _lastOverClass, // last overClass used (dragOverClasses feature)\n      _copy, // item used for copying\n      _copyModel, // item-model used for copying\n      _containers = {}, // containers managed by the drake\n      _containersModel = {}, // containers model\n      _renderTimer, // timer for setTimeout renderMirrorImage\n      _isContainer, // internal isContainer\n      _dropContainer, // droppable container under drag item\n      defaultClasses = {\n        mirror: 'gu-mirror',\n        hide: 'gu-hide',\n        unselectable: 'gu-unselectable',\n        transit: 'gu-transit',\n        overActive: 'gu-over-active',\n        overAccepts: 'gu-over-accept',\n        overDeclines: 'gu-over-decline'\n      },\n      o = { // options\n        classes: defaultClasses,\n        containers: false,\n        moves: always,\n        accepts: always,\n        isContainer: never,\n        copy: false,\n        delay: false,\n        invalid: invalidTarget,\n        revertOnSpill: false,\n        removeOnSpill: false,\n        dragOverClasses: false,\n        lockX: false,\n        lockY: false,\n        boundingBox: false,\n        containersModel: false\n      };\n\n    if (!isElement(o.boundingBox)) {\n      o.boundingBox = null;\n    }\n\n    if (options && options.classes) {\n      angular.extend(defaultClasses, options.classes);\n      angular.extend(options.classes, defaultClasses);\n    }\n\n    angular.extend(o, options);\n\n    if (o.delay === true) {\n      o.delay = 300;\n    }\n\n    initialContainers = o.containers || (initialContainers ? makeArray(initialContainers) : []);\n    if(o.containers){\n      initialContainers = makeArray(initialContainers);\n    }\n    if(o.containersModel){\n      o.containersModel = makeArray(o.containersModel);\n    }\n\n    initialContainers.forEach(function addMouseDown (container) {\n      regEvent(container, 'on', 'mousedown', grab);\n    });\n\n    if (o.nameSpace) {\n       if (!Array.isArray(o.nameSpace)) {\n          o.nameSpace = [o.nameSpace];\n       }\n       function proceedNameSpaces(_containers, containersNameSpaced, nameSpace, initialContainers){\n        if (!containersNameSpaced[nameSpace]) {\n          containersNameSpaced[nameSpace] = [];\n        }\n        Array.prototype.push.apply(containersNameSpaced[nameSpace], initialContainers);\n        _containers[nameSpace] = containersNameSpaced[nameSpace];\n       }\n      o.nameSpace.forEach(function eachNameSpace (nameSpace) {\n        proceedNameSpaces(_containers, containersNameSpaced, nameSpace, initialContainers);\n        if(o.containersModel){\n          proceedNameSpaces(_containersModel, containersNameSpacedModel, nameSpace, o.containersModel)\n        }\n      });\n      _isContainer = isContainerNameSpaced;\n    }else{\n      _containers = initialContainers;\n      _isContainer = isContainer;\n      if(o.containersModel){\n          _containersModel = o.containersModel;\n        }\n    }\n\n    events();\n\n    var api = {\n      addContainer: manipulateContainers('add'),\n      removeContainer: manipulateContainers('remove'),\n      containers: _containers,\n      start: start,\n      end: end,\n      cancel: cancel,\n      remove: remove,\n      destroy: destroy,\n      dragging: false\n    };\n\n    return api;\n\n\n    function makeArray(all) {\n      if (Array.isArray(all)) {\n        return all;\n      }\n      if (all.length) { // is array-like\n        var iAll = all.length,\n          newArray = [];\n        while (iAll) {\n          iAll--;\n          newArray.push(all[iAll]);\n        }\n        return newArray;\n      } else { // is one element\n        return [all];\n      }\n    }\n\n    function manipulateContainers(op) {\n      return function addOrRemove(all) {\n        var changes = Array.isArray(all) ? all : makeArray(all);\n        changes.forEach(function forEachContainer(container) {\n          if(o.nameSpace){\n            angular.forEach(o.nameSpace, function addRemoveNamespaced (containers, nameSpace) {\n              if (op === 'add') {\n                _containers[nameSpace].push(container);\n                console.warn && console.warn('drake.addContainer is deprecated. please access drake.containers directly, instead');\n              } else {\n                _containers[nameSpace].splice(_containers.indexOf(container), 1);\n                console.warn && console.warn('drake.removeContainer is deprecated. please access drake.containers directly, instead');\n              }\n            });\n          }else{\n            if (op === 'add') {\n              _containers.push(container);\n              console.warn && console.warn('drake.addContainer is deprecated. please access drake.containers directly, instead');\n            } else {\n              _containers.splice(_containers.indexOf(container), 1);\n              console.warn && console.warn('drake.removeContainer is deprecated. please access drake.containers directly, instead');\n            }\n          }\n        });\n      };\n    }\n\n    function isContainer(el) {\n      if(api.containers.indexOf(el) !== -1 || o.isContainer(el)){\n        if(o.containersModel){\n          _lastTargetModel = _targetModel;\n          _targetModel = _containersModel[api.containers.indexOf(el)];\n        }\n        return true;\n      }\n      return false;\n    }\n\n    function isContainerNameSpaced(el) {\n      var nameSpace;\n      for (nameSpace in api.containers) {\n          if (api.containers.hasOwnProperty(nameSpace) && api.containers[nameSpace].indexOf(el) !== -1) {\n              if(o.containersModel){\n                _lastTargetModel = _targetModel;\n                _targetModel = _containersModel[nameSpace][api.containers[nameSpace].indexOf(el)];\n              }\n              return true;\n          }\n      }\n      if(o.isContainer(el)){\n        if(o.containersModel && o.isContainerModel){\n          var found = false;\n          function tryScope (scope) {\n            if(scope && scope[o.isContainerModel]){\n              found = true;\n              _lastTargetModel = _targetModel;\n              _targetModel = scope[o.isContainerModel];\n            }\n          }\n          tryScope(angular.element(target).isolateScope());\n          if(!found){\n            tryScope(angular.element(target).scope());\n          }\n        }\n        return true;\n      }\n      return false;\n    }\n\n    function events(rem) {\n      var op = rem ? 'off' : 'on';\n      regEvent(documentElement, op, 'mouseup', release);\n    }\n\n    function destroy() {\n      events(true);\n      api.removeContainer(_containers);\n      release({});\n    }\n\n    function grab(e) {\n      e = e || window.event;\n      var item = e.target;\n\n      if ((e.which !== 0 && e.which !== 1) || e.metaKey || e.ctrlKey) {\n        return; // we only care about honest-to-god left clicks and touch events\n      }\n      if (start(item) !== true) {\n        return;\n      }\n\n      if (!o.direction) {\n        var parent = item.parentElement,\n          parentHeight = parent.offsetHeight,\n          parentWidth = parent.offsetWidth,\n          childHeight = item.clientHeight,\n          childWidth = item.clientWidth;\n        o.direction = parentHeight / childHeight < parentWidth / childWidth ? 'horizontal' : 'vertical';\n      }\n\n      var offset = getOffset(_item);\n      _offsetX = getCoord('pageX', e) - offset.left;\n      _offsetY = getCoord('pageY', e) - offset.top;\n      _clientX = getCoord('clientX', e);\n      _clientY = getCoord('clientY', e);\n      if (o.boundingBox) {\n        _offsetXr = getCoord('pageX', e) - offset.right;\n        _offsetYb = getCoord('pageY', e) - offset.bottom;\n      }\n\n      if (typeof o.delay === 'number') {\n        _renderTimer = setTimeout(function() {\n          renderMirrorAndDrag(e);\n        }, o.delay);\n      } else {\n        renderMirrorAndDrag(e);\n      }\n\n      e.preventDefault();\n    }\n\n    function renderMirrorAndDrag(e) {\n      renderMirrorImage();\n      // initial position\n      _mirror.style.left = _clientX - _offsetX + 'px';\n      _mirror.style.top = _clientY - _offsetY + 'px';\n\n      drag(e);\n    }\n\n\n    function start(item) {\n      var handle = item;\n\n      if (api.dragging && _mirror) {\n        return false;\n      }\n\n      if (_isContainer(item)) {\n        return false; // don't drag container itself\n      }\n      while (!_isContainer(item.parentElement)) {\n        if (o.invalid(item, handle)) {\n          return false;\n        }\n        item = item.parentElement; // drag target should be a top element\n        if (!item) {\n          return;\n        }\n\n      }\n      if (o.invalid(item, handle)) {\n        return false;\n      }\n\n      var container = item.parentElement;\n      if (!o.moves(item, container, handle)) { // is movable\n        return false;\n      }\n\n      end();\n\n      if (o.containersModel){\n        var containerIndex = initialContainers.indexOf(container),\n          itemIndex = domIndexOf(item, container);\n\n        _initialIndex = _currentIndex = itemIndex;\n        _sourceModel = o.containersModel[containerIndex];\n        _itemModel = _sourceModel[itemIndex];\n        if(o.copy){\n          _copyModel = angular.copy(_itemModel);\n        }\n        console.log(_itemModel);\n      }\n\n      if (o.copy) {\n        _copy = item.cloneNode(true);\n        addClass(_copy, o.classes.transit);\n        if (o.scope) {\n          o.scope.$emit('cloned', _copy, item);\n        }\n      } else {\n        addClass(item, o.classes.transit);\n      }\n\n      _source = container;\n      _item = item;\n      _initialSibling = _currentSibling = nextEl(item);\n\n      api.dragging = true;\n      if (o.scope) {\n        o.scope.$emit('drag', _item, _source);\n      }\n\n      return true;\n    }\n\n    function invalidTarget(el) {\n      return el.tagName === 'A' || el.tagName === 'BUTTON';\n    }\n\n    function end() {\n      if (!api.dragging) {\n        return;\n      }\n      var item = _copy || _item;\n      drop(item, item.parentElement);\n    }\n\n    function release(e) {\n      if (!api.dragging) {\n        return;\n      }\n      e = e || window.event;\n\n      _clientX = getCoord('clientX', e);\n      _clientY = getCoord('clientY', e);\n\n      var item = _copy || _item,\n        elementBehindCursor = getElementBehindPoint(_mirror, _clientX, _clientY),\n        dropTarget = findDropTarget(elementBehindCursor, _clientX, _clientY);\n      if (dropTarget && (o.copy === false || dropTarget !== _source)) {\n        drop(item, dropTarget);\n      } else if (o.removeOnSpill) {\n        remove();\n      } else {\n        cancel();\n      }\n      if (o.dragOverClasses && _lastOverElem) {\n        rmClass(_lastOverElem, _lastOverClass);\n        _dropContainer = null;\n        _lastOverElem = null;\n      }\n    }\n\n    function drop(item, target) {\n      if (o.scope && isInitialPlacement(target)) {\n        o.scope.$emit('cancel', item, _source);\n      } else if (o.scope) {\n        o.scope.$emit('drop', item, target, _source);\n      }\n      cleanup();\n    }\n\n    function remove() {\n      if (!api.dragging) {\n        return;\n      }\n      var item = _copy || _item,\n        parent = item.parentElement;\n      if (parent) {\n        parent.removeChild(item);\n      }\n      if(o.containersModel && !o.copy){\n        console.log(_itemModel);\n        _sourceModel.splice(_sourceModel.indexOf(_itemModel),1);\n      }\n      if (o.scope) {\n        o.scope.$emit(o.copy ? 'cancel' : 'remove', item, parent);\n      }\n      cleanup();\n    }\n\n    function cancel(revert) {\n      if (!api.dragging) {\n        return;\n      }\n      var reverts = arguments.length > 0 ? revert : o.revertOnSpill,\n        item = _copy || _item,\n        parent = item.parentElement;\n      if (parent === _source && o.copy) {\n        parent.removeChild(_copy);\n      }\n      var initial = isInitialPlacement(parent);\n      if (initial === false && o.copy === false && reverts) {\n        _source.insertBefore(item, _initialSibling);\n        if(o.containersModel){\n        console.log(_itemModel);\n          _lastTargetModel = _targetModel;\n          _targetModel = _sourceModel;\n          moveInContainersModel(_initialIndex);\n        }\n      }\n      if (o.scope && (initial || reverts)) {\n        o.scope.$emit('cancel', item, _source);\n      } else if (o.scope) {\n        o.scope.$emit('drop', item, parent, _source);\n      }\n      cleanup();\n    }\n\n    function cleanup() {\n      var item = _copy || _item;\n      removeMirrorImage();\n      if (item) {\n        rmClass(item, o.classes.transit);\n      }\n      if (_renderTimer) {\n        clearTimeout(_renderTimer);\n      }\n      _source = _item = _copy = _initialSibling = _currentSibling = _sourceModel = null;\n      _itemModel = _copyModel = _initialIndex = _currentIndex = _renderTimer = null;\n\n      api.dragging = false;\n      if (o.scope) {\n        o.scope.$emit('dragend', item);\n      }\n    }\n\n    function isInitialPlacement(target, s) {\n      var sibling;\n      if (s !== void 0) {\n        sibling = s;\n      } else if (_mirror) {\n        sibling = _currentSibling;\n      } else {\n        sibling = nextEl(_item || _copy);\n      }\n      return target === _source && sibling === _initialSibling;\n    }\n\n    function findDropTarget(elementBehindCursor, clientX, clientY) {\n      var target = elementBehindCursor;\n      while (target && !accepted()) {\n        target = target.parentElement;\n      }\n      return target;\n\n      function accepted() {\n        var accepts = false;\n\n        if (_isContainer(target)) { // is droppable?\n          var immediate = getImmediateChild(target, elementBehindCursor),\n            reference = getReference(target, immediate, clientX, clientY),\n            initial = isInitialPlacement(target, reference);\n          accepts = initial ? true : o.accepts(_item, target, _source, reference, _itemModel, _sourceModel);\n        }\n\n        if (o.dragOverClasses &&\n          hasClass(target, o.classes.overActive) &&\n          target !== _lastOverElem) {\n\n          if (_lastOverElem) {\n            rmClass(_lastOverElem, _lastOverClass);\n          }\n\n          _lastOverClass = accepts ? o.classes.overAccepts : o.classes.overDeclines;\n          addClass(target, _lastOverClass);\n          _dropContainer = accepts ? target : null;\n          _lastOverElem = target;\n        }\n        return accepts;\n      }\n    }\n\n    function drag(e) {\n      if (!_mirror) {\n        return;\n      }\n      e = e || window.event;\n\n      _clientX = getCoord('clientX', e);\n      _clientY = getCoord('clientY', e);\n\n      var x = _clientX - _offsetX,\n        y = _clientY - _offsetY,\n        pageX,\n        pageY,\n        offsetBox;\n\n      if (o.boundingBox) {\n        pageX = getCoord('pageX', e);\n        pageY = getCoord('pageY', e);\n        offsetBox = getOffset(o.boundingBox);\n      }\n\n      if (!o.lockY) {\n        if (!o.boundingBox || (pageX > offsetBox.left + _offsetX && pageX < offsetBox.right + _offsetXr)) {\n          _mirror.style.left = x + 'px';\n        } else if (o.boundingBox) { // in case user scroll\n          if (pageX < offsetBox.left + _offsetX) {\n            _mirror.style.left = _clientX - (pageX - offsetBox.left) + 'px';\n          } else {\n            _mirror.style.left = _clientX - _mirrorWidth - (pageX - offsetBox.right) + 'px';\n          }\n        }\n      }\n      if (!o.lockX) {\n        if (!o.boundingBox || (pageY > offsetBox.top + _offsetY && pageY < offsetBox.bottom + _offsetYb)) {\n          _mirror.style.top = y + 'px';\n        } else if (o.boundingBox) { // in case user scroll\n          if (pageY < offsetBox.top + _offsetY) {\n            _mirror.style.top = _clientY - (pageY - offsetBox.top) + 'px';\n          } else {\n            _mirror.style.top = _clientY - _mirrorHeight - (pageY - offsetBox.bottom) + 'px';\n          }\n        }\n      }\n\n      var item = _copy || _item,\n        elementBehindCursor = getElementBehindPoint(_mirror, _clientX, _clientY),\n        dropTarget = findDropTarget(elementBehindCursor, _clientX, _clientY);\n\n      if (dropTarget === _source && o.copy) {\n        return;\n      }\n\n      var reference,\n        immediate = getImmediateChild(dropTarget, elementBehindCursor);\n\n      if(o.containersModel){\n        console.log(_itemModel);\n        var itemModel = _copyModel || _itemModel,\n          referenceIndex;\n\n        _lastTargetScope = _targetScope || angular.element(_source).scope();\n        _targetScope = angular.element(dropTarget).scope();\n      }\n\n      if (immediate !== null) {\n        // console.log(1);\n        reference = getReference(dropTarget, immediate, _clientX, _clientY);\n        if(o.containersModel){\n          referenceIndex = domIndexOf(reference, dropTarget);\n        }\n      } else if (o.revertOnSpill === true && !o.copy) {\n        console.log(2);\n        reference = _initialSibling;\n        dropTarget = _source;\n        if(o.containersModel){\n          referenceIndex = _initialIndex;\n          _lastTargetModel = _targetModel;\n          _targetModel = _sourceModel;\n          _lastTargetScope = _targetScope;\n          _targetScope = angular.element(dropTarget).scope();\n        }\n      } else {\n        console.log(3);\n        if ((o.copy || o.removeOnSpill === true) && item.parentElement !== null) {\n          item.parentElement.removeChild(item);\n          if(o.containersModel){\n            _targetModel.splice(referenceIndex, 1);\n            _targetScope.$apply();\n          }\n        }\n        return;\n      }\n      if (reference === null || reference !== item && reference !== nextEl(item)) {\n\n        console.log(4);\n        _currentSibling = reference;\n        dropTarget.insertBefore(item, reference);\n\n        if(o.containersModel){\n          console.log(_itemModel);\n          moveInContainersModel(referenceIndex);\n          _currentIndex = referenceIndex;\n          _targetScope.$apply();\n        }\n\n        if (o.scope) {\n          o.scope.$emit('shadow', item, dropTarget);\n        }\n      }\n    }\n\n    function moveInContainersModel (referenceIndex) {\n      if(_lastTargetModel === _targetModel){\n        _targetModel.splice(referenceIndex, 0, _lastTargetModel.splice(_currentIndex, 1)[0]);\n      }else{\n        _lastTargetModel.splice(_currentIndex, 1);\n        _targetModel.splice(referenceIndex, 1, _itemModel);\n        _lastTargetScope.$apply();\n      }\n    }\n\n    function scrollContainer(e){   \n      if(_dropContainer){_dropContainer.scrollTop += e.deltaY};\n    }\n\n    function renderMirrorImage() {\n      if (_mirror) {\n        return;\n      }\n      var rect = _item.getBoundingClientRect();\n      _mirror = _item.cloneNode(true);\n      _mirrorWidth = rect.width;\n      _mirrorHeight = rect.height;\n      _mirror.style.width = getRectWidth(rect) + 'px';\n      _mirror.style.height = getRectHeight(rect) + 'px';\n      rmClass(_mirror, o.classes.transit);\n      addClass(_mirror, o.classes.mirror);\n      body.appendChild(_mirror);\n      regEvent(documentElement, 'on', 'mousemove', drag);\n      addClass(body, o.classes.unselectable);\n      regEvent(_mirror, 'on', 'wheel', scrollContainer);\n      if (o.scope) {\n        o.scope.$emit('cloned', _mirror, _item);\n      }\n    }\n\n    function removeMirrorImage() {\n      if (_mirror) {\n        rmClass(body, o.classes.unselectable);\n        regEvent(documentElement, 'off', 'mousemove', drag);\n        regEvent(_mirror, 'off', 'wheel', scrollContainer);\n        _mirror.parentElement.removeChild(_mirror);\n        _mirror = null;\n      }\n    }\n\n    function getImmediateChild(dropTarget, target) {\n      var immediate = target;\n      while (immediate !== dropTarget && immediate.parentElement !== dropTarget) {\n        immediate = immediate.parentElement;\n      }\n      if (immediate === documentElement) {\n        return null;\n      }\n      return immediate;\n    }\n\n    function getReference(dropTarget, target, x, y) {\n      var horizontal = o.direction === 'horizontal';\n      var reference = target !== dropTarget ? inside() : outside();\n      return reference;\n\n      function outside() { // slower, but able to figure out any position\n        var len = dropTarget.children.length;\n        var i;\n        var el;\n        var rect;\n        for (i = 0; i < len; i++) {\n          el = dropTarget.children[i];\n          rect = el.getBoundingClientRect();\n          if (horizontal && rect.left > x) {\n            return el;\n          }\n          if (!horizontal && rect.top > y) {\n            return el;\n          }\n        }\n        return null;\n      }\n\n      function inside() { // faster, but only available if dropped inside a child element\n        var rect = target.getBoundingClientRect();\n        if (horizontal) {\n          return resolve(x > rect.left + getRectWidth(rect) / 2);\n        }\n        return resolve(y > rect.top + getRectHeight(rect) / 2);\n      }\n\n      function resolve(after) {\n        return after ? nextEl(target) : target;\n      }\n    }\n\n    function getScroll(scrollProp, offsetProp) {\n      if (typeof window[offsetProp] !== 'undefined') {\n        return window[offsetProp];\n      }\n      if (documentElement.clientHeight) {\n        return documentElement[scrollProp];\n      }\n      return body[scrollProp];\n    }\n\n    function getOffset(el) {\n      var rect = el.getBoundingClientRect(),\n        scrollTop = getScroll('scrollTop', 'pageYOffset'),\n        scrollLeft = getScroll('scrollLeft', 'pageXOffset');\n      return {\n        left: rect.left + scrollLeft,\n        right: rect.right + scrollLeft,\n        top: rect.top + scrollTop,\n        bottom: rect.bottom + scrollTop\n      };\n    }\n\n    function getElementBehindPoint(point, x, y) {\n      if (!x && !y) {\n        return null;\n      }\n      var p = point || {},\n        state = p.className,\n        el;\n      p.className += ' ' + o.classes.hide;\n      el = document.elementFromPoint(x, y);\n      p.className = state;\n      return el;\n    }\n  };\n\n  function regEvent(el, op, type, fn) {\n    var touch = {\n        mouseup: 'touchend',\n        mousedown: 'touchstart',\n        mousemove: 'touchmove'\n      },\n      $el = angular.element(el);\n\n    if(type !== 'wheel'){$el[op](touch[type], fn)};\n    $el[op](type, fn);\n  }\n\n  function never() {\n    return false;\n  }\n\n  function always() {\n    return true;\n  }\n\n  function nextEl(el) {\n    return el.nextElementSibling || manually();\n\n    function manually() {\n      var sibling = el;\n      do {\n        sibling = sibling.nextSibling;\n      } while (sibling && sibling.nodeType !== 1);\n      return sibling;\n    }\n  }\n\n  //Cannot use angular.isElement because we need to check plain dom element, no jQlite wrapped  \n  function isElement(o) {\n    return (\n      typeof HTMLElement === 'object' ? o instanceof HTMLElement : //DOM2\n      o && typeof o === 'object' && o !== null && o.nodeType === 1 && typeof o.nodeName === 'string'\n    );\n  }\n\n  function addClass(el, className) {\n    if (el.className.indexOf(' ' + className) === -1) {\n      el.className += ' ' + className;\n    }\n  }\n\n  function rmClass(el, className) {\n    angular.element(el).removeClass(className);\n  }\n\n  function hasClass(el, className) {\n    return (' ' + el.className + ' ').indexOf(' ' + className + ' ') > -1;\n  }\n\n  function getEventHost(e) {\n    // on touchend event, we have to use `e.changedTouches`\n    // see http://stackoverflow.com/questions/7192563/touchend-event-properties\n    // see https://github.com/bevacqua/dragula/issues/34\n    if (e.targetTouches && e.targetTouches.length) {\n      return e.targetTouches[0];\n    }\n    if (e.changedTouches && e.changedTouches.length) {\n      return e.changedTouches[0];\n    }\n    return e;\n  }\n\n  function getCoord(coord, e) {\n    var host = getEventHost(e);\n    var missMap = {\n      pageX: 'clientX', // IE8\n      pageY: 'clientY' // IE8\n    };\n    if (coord in missMap && !(coord in host) && missMap[coord] in host) {\n      coord = missMap[coord];\n    }\n    return host[coord];\n  }\n\n  function getRectWidth(rect) {\n    return rect.width || (rect.right - rect.left);\n  }\n\n  function getRectHeight(rect) {\n    return rect.height || (rect.bottom - rect.top);\n  }\n\n  function domIndexOf(child, parent){\n    return Array.prototype.indexOf.call(angular.element(parent).children(), child);\n  }\n\n}).directive('dragular', ['dragularService', function(dragularService) {\n  return {\n    restrict: 'A',\n    link: function($scope, iElm, iAttrs) {\n      dragularService(iElm[0], $scope[iAttrs.dragular || 'undefined'] || tryJson(iAttrs.dragular));\n\n      function tryJson(json) {\n        try {\n          return JSON.parse(json);\n        } catch (e) {\n          console.log(e, 'Dragular: not valid JSON for options!', iElm);\n          return undefined;\n        }\n      }\n    }\n  };\n}]);\n\n},{}]},{},[\"/home/ctibor/projects/adminmode/gulp/node_modules/dragular/dragular.js\"])\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,\n"],"file":"dragular.js","sourceRoot":"/source/"}