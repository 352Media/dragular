!function e(n,t,i){function o(a,r){if(!t[a]){if(!n[a]){var s="function"==typeof require&&require;if(!r&&s)return s(a,!0);if(l)return l(a,!0);var c=new Error("Cannot find module '"+a+"'");throw c.code="MODULE_NOT_FOUND",c}var d=t[a]={exports:{}};n[a][0].call(d.exports,function(e){var t=n[a][1][e];return o(t?t:e)},d,d.exports,e,n,t,i)}return t[a].exports}for(var l="function"==typeof require&&require,a=0;a<i.length;a++)o(i[a]);return o}({1:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("Basic",["$element","dragularService",function(e,n){n(e.children())}])},{"../examplesApp":22}],2:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("Basic",["$element","dragularService",function(e,n){n(e.children())}]),i.controller("BasicModel",["$scope","$element","dragularService",function(e,n,t){e.items1=[{content:"Move me, but you can only drop me in one of these containers."},{content:"If you try to drop me somewhere other than these containers, I'll just come back."},{content:"Item 3"},{content:"Item 4"}],e.items2=[{content:"Item 5"},{content:"Item 6"},{content:"Item 7"},{content:"Item 8"}];var i=n.children().eq(0).children();t([i[0],i[1]],{containersModel:[e.items1,e.items2]})}])},{"../examplesApp":22}],3:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("BoundingBox",["$element","dragularService",function(e,n){var t=e[0];n(e.children(),{boundingBox:t})}])},{"../examplesApp":22}],4:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("BoundingBoxLockX",["$element","dragularService",function(e,n){var t=e.children().children()[0];n(t,{boundingBox:t,lockX:!0})}])},{"../examplesApp":22}],5:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("BoundingBoxLockY",["$element","dragularService",function(e,n){var t=e.children().children()[0];n(t,{boundingBox:t,lockY:!0})}])},{"../examplesApp":22}],6:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("Copy",["$element","dragularService",function(e,n){n(e.children(),{copy:!0})}])},{"../examplesApp":22}],7:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("CopyModel",["$scope","$element","dragularService",function(e,n,t){e.items1=[{content:"Move me, and make copy on drop."},{content:"If you try to drop me somewhere other than these containers, I'll just come back."},{content:"Item 3"},{content:"Item 4"}],e.items2=[{content:"Item 5"},{content:"Item 6"},{content:"Item 7"},{content:"Item 8"}];var i=n.children().eq(0).children();t([i[0],i[1]],{containersModel:[e.items1,e.items2],copy:!0})}])},{"../examplesApp":22}],8:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("CustomClasses",["$element","dragularService",function(e,n){n(e.children(),{classes:{mirror:"custom-green-mirror"}})}])},{"../examplesApp":22}],9:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("Directive",["$scope","dragularService",function(e){e.dragularOptions={classes:{mirror:"custom-green-mirror"},nameSpace:"same"}}])},{"../examplesApp":22}],10:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("DirectiveModel",["$scope","$element","dragularService",function(e,n,t){e.items1=[{content:"Move me, and make copy on drop."},{content:"If you try to drop me somewhere other than these containers, I'll just come back."},{content:"Item 3"},{content:"Item 4"}],e.items2=[{content:"Item 5"},{content:"Item 6"},{content:"Item 7"},{content:"Item 8"}],e.dragularOptions={containersModel:e.items1,classes:{mirror:"custom-green-mirror"},nameSpace:"common"}}])},{"../examplesApp":22}],11:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("DragOverClasses",["$element","dragularService",function(e,n){n([e.children()[0],e.children()[2]],{nameSpace:"apples",dragOverClasses:!0}),n([e.children()[1],e.children()[3]],{nameSpace:"oranges",dragOverClasses:!0})}])},{"../examplesApp":22}],12:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("Events",["$scope","$element","dragularService","$timeout",function(e,n,t,i){t(n.children(),{scope:e}),e.$on("drag",function(e,n){e.stopPropagation(),n.className=n.className.replace(" ex-moved","")}),e.$on("drop",function(e,n){e.stopPropagation(),i(function(){n.className+=" ex-moved"},0)})}])},{"../examplesApp":22}],13:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("Handle",["$element","dragularService",function(e,n){n(e.children(),{moves:function(e,n,t){return"handle"===t.className}})}])},{"../examplesApp":22}],14:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("NameSpaces",["$element","dragularService",function(e,n){n([e.children()[0],e.children()[2]],{nameSpace:"apples"}),n(e.children()[1],{nameSpace:"oranges"}),n(e.children()[3],{nameSpace:["oranges","apples"]})}])},{"../examplesApp":22}],15:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("NestedNgRepeat",["$timeout","$scope","$element","dragularService",function(e,n,t,i){e(function(){i(t,{moves:function(e,n,t){return t.classList.contains("row-handle")}}),i(t.children(),{moves:function(e,n,t){return!t.classList.contains("row-handle")}})},0),n.items=[{items:[{content:"Item a1"},{content:"Item a2"},{content:"Item a3"},{content:"Item a4"}]},{items:[{content:"Item b1"},{content:"Item b2"},{content:"Item b3"},{content:"Item b4"}]},{items:[{content:"Item c1"},{content:"Item c2"},{content:"Item c3"},{content:"Item c4"}]}]}])},{"../examplesApp":22}],16:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("NestedNgRepeatWithModel",["$timeout","$scope","$element","dragularService",function(e,n,t,i){e(function(){var e=t.children().eq(0).children(),o=e.children(),l=[];i(e,{moves:function(e,n,t){return t.classList.contains("row-handle")},containersModel:n.items});for(var a=0;a<o.length;a++)l.push(o.eq(a).children()[1]);i(l,{moves:function(e,n,t){return!t.classList.contains("row-handle")},containersModel:function(){for(var e=n.items,t=[],i=0;i<e.length;i++)t.push(e[i].items);return t}()})},0),n.items=[{items:[{content:"Item a1"},{content:"Item a2"},{content:"Item a3"},{content:"Item a4"}]},{items:[{content:"Item b1"},{content:"Item b2"},{content:"Item b3"},{content:"Item b4"}]},{items:[{content:"Item c1"},{content:"Item c2"},{content:"Item c3"},{content:"Item c4"}]}]}])},{"../examplesApp":22}],17:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("NgRepeat",["$scope","$element","dragularService",function(e,n,t){t(n.children()),e.items=[{content:"Try to add or remove some elements (click on +- buttons), you will see that it is not problem for dragular."},{content:"Item 2"},{content:"Item 3"},{content:"Item 4"}],e.addItem=function(){var n=e.items.indexOf(this.item)+1;e.items.splice(n,0,{content:this.item.content+"-copy"})},e.removeItem=function(){var n=e.items.indexOf(this.item);e.items.splice(n,1)}}])},{"../examplesApp":22}],18:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("NgRepeatWithModel",["$scope","$element","dragularService",function(e,n,t){e.items=[{content:"Try to add or remove some elements (click on +- buttons), you will see that it is not problem for dragular."},{content:"Item 2"},{content:"Item 3"},{content:"Item 4"}],t(n.children().eq(0).children(),{containersModel:e.items}),e.addItem=function(){var n=e.items.indexOf(this.item)+1;e.items.splice(n,0,{content:this.item.content+"-copy"})},e.removeItem=function(){var n=e.items.indexOf(this.item);e.items.splice(n,1)}}])},{"../examplesApp":22}],19:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("RemoveOnSpill",["$element","dragularService",function(e,n){n(e.children(),{removeOnSpill:!0})}])},{"../examplesApp":22}],20:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("RevertOnSpill",["$element","dragularService",function(e,n){n(e.children(),{revertOnSpill:!0})}])},{"../examplesApp":22}],21:[function(e,n,t){"use strict";var i=e("../examplesApp");i.controller("ScrollingDrag",["$element","dragularService",function(e,n){n(e.children())}])},{"../examplesApp":22}],22:[function(e,n,t){"use strict";e("../../../src/dragularModule"),e("./templates"),n.exports=angular.module("examplesApp",["dragularModule","templates","ui.router"]).controller("ExAppCtrl",["$scope","$rootScope",function(e,n){e.examplesList=[{template:"exampleBasic/exampleBasic.html",title:"Basic"},{template:"exampleBasicWithModel/exampleBasicWithModel.html",title:"Basic - with model"},{template:"exampleDirective/exampleDirective.html",title:"Directive"},{template:"exampleDirectiveWithModel/exampleDirectiveWithModel.html",title:"Directive - with model"},{template:"exampleEvents/exampleEvents.html",title:"Events"},{template:"exampleRemoveOnSpill/exampleRemoveOnSpill.html",title:"Remove on spill"},{template:"exampleRevertOnSpill/exampleRevertOnSpill.html",title:"Revert on spill"},{template:"exampleCopy/exampleCopy.html",title:"Copy"},{template:"exampleCopyWithModel/exampleCopyWithModel.html",title:"Copy - with model"},{template:"exampleHandle/exampleHandle.html",title:"Handle"},{template:"exampleCustomClasses/exampleCustomClasses.html",title:"Custom classes"},{template:"exampleNameSpaces/exampleNameSpaces.html",title:"NameSpaces"},{template:"exampleDragOverClasses/exampleDragOverClasses.html",title:"DragOver classes"},{template:"exampleBoundingBox/exampleBoundingBox.html",title:"BoundingBox"},{template:"exampleBoundingBoxLockX/exampleBoundingBoxLockX.html",title:"BoundingBox + LockX"},{template:"exampleBoundingBoxLockY/exampleBoundingBoxLockY.html",title:"BoundingBox + LockY"},{template:"exampleNgRepeat/exampleNgRepeat.html",title:"ngRepeat"},{template:"exampleNgRepeatWithModel/exampleNgRepeatWithModel.html",title:"ngRepeat - with model"},{template:"exampleNestedNgRepeat/exampleNestedNgRepeat.html",title:"Nested ngRepead"},{template:"exampleNestedNgRepeatWithModel/exampleNestedNgRepeatWithModel.html",title:"Nested ngRepead - with model"},{template:"exampleScrollingDrag/exampleScrollingDrag.html",title:"Scrolling drag"}],e.exampleTemplate="exampleBasic/exampleBasic.html",e.highlightCode=function(){if(document.getElementsByTagName("code").length)for(var e=document.getElementsByTagName("code"),n=e.length-1;n>=0;n--)hljs.highlightBlock(e[n])};var t=angular.element(document.getElementById("rowOffcanvas"));e.toggleSidebar=function(){t.toggleClass("active")}}]),{exampleBasic:{exampleBasic:e("./exampleBasic/exampleBasic.js")},exampleBasicWithModel:{exampleBasicWithModel:e("./exampleBasicWithModel/exampleBasicWithModel.js")},exampleBoundingBox:{exampleBoundingBox:e("./exampleBoundingBox/exampleBoundingBox.js")},exampleBoundingBoxLockX:{exampleBoundingBoxLockX:e("./exampleBoundingBoxLockX/exampleBoundingBoxLockX.js")},exampleBoundingBoxLockY:{exampleBoundingBoxLockY:e("./exampleBoundingBoxLockY/exampleBoundingBoxLockY.js")},exampleCopy:{exampleCopy:e("./exampleCopy/exampleCopy.js")},exampleCopyWithModel:{exampleCopyWithModel:e("./exampleCopyWithModel/exampleCopyWithModel.js")},exampleCustomClasses:{exampleCustomClasses:e("./exampleCustomClasses/exampleCustomClasses.js")},exampleDirective:{exampleDirective:e("./exampleDirective/exampleDirective.js")},exampleDirectiveWithModel:{exampleDirectiveWithModel:e("./exampleDirectiveWithModel/exampleDirectiveWithModel.js")},exampleDragOverClasses:{exampleDragOverClasses:e("./exampleDragOverClasses/exampleDragOverClasses.js")},exampleEvents:{exampleEvents:e("./exampleEvents/exampleEvents.js")},exampleHandle:{exampleHandle:e("./exampleHandle/exampleHandle.js")},exampleNameSpaces:{exampleNameSpaces:e("./exampleNameSpaces/exampleNameSpaces.js")},exampleNestedNgRepeat:{exampleNestedNgRepeat:e("./exampleNestedNgRepeat/exampleNestedNgRepeat.js")},exampleNestedNgRepeatWithModel:{exampleNestedNgRepeatWithModel:e("./exampleNestedNgRepeatWithModel/exampleNestedNgRepeatWithModel.js")},exampleNgRepeat:{exampleNgRepeat:e("./exampleNgRepeat/exampleNgRepeat.js")},exampleNgRepeatWithModel:{exampleNgRepeatWithModel:e("./exampleNgRepeatWithModel/exampleNgRepeatWithModel.js")},exampleRemoveOnSpill:{exampleRemoveOnSpill:e("./exampleRemoveOnSpill/exampleRemoveOnSpill.js")},exampleRevertOnSpill:{exampleRevertOnSpill:e("./exampleRevertOnSpill/exampleRevertOnSpill.js")},exampleScrollingDrag:{exampleScrollingDrag:e("./exampleScrollingDrag/exampleScrollingDrag.js")},examplesRouter:e("./examplesRouter.js"),templates:e("./templates.js")}},{"../../../src/dragularModule":26,"./exampleBasic/exampleBasic.js":1,"./exampleBasicWithModel/exampleBasicWithModel.js":2,"./exampleBoundingBox/exampleBoundingBox.js":3,"./exampleBoundingBoxLockX/exampleBoundingBoxLockX.js":4,"./exampleBoundingBoxLockY/exampleBoundingBoxLockY.js":5,"./exampleCopy/exampleCopy.js":6,"./exampleCopyWithModel/exampleCopyWithModel.js":7,"./exampleCustomClasses/exampleCustomClasses.js":8,"./exampleDirective/exampleDirective.js":9,"./exampleDirectiveWithModel/exampleDirectiveWithModel.js":10,"./exampleDragOverClasses/exampleDragOverClasses.js":11,"./exampleEvents/exampleEvents.js":12,"./exampleHandle/exampleHandle.js":13,"./exampleNameSpaces/exampleNameSpaces.js":14,"./exampleNestedNgRepeat/exampleNestedNgRepeat.js":15,"./exampleNestedNgRepeatWithModel/exampleNestedNgRepeatWithModel.js":16,"./exampleNgRepeat/exampleNgRepeat.js":17,"./exampleNgRepeatWithModel/exampleNgRepeatWithModel.js":18,"./exampleRemoveOnSpill/exampleRemoveOnSpill.js":19,"./exampleRevertOnSpill/exampleRevertOnSpill.js":20,"./exampleScrollingDrag/exampleScrollingDrag.js":21,"./examplesRouter.js":23,"./templates":24,"./templates.js":24}],23:[function(e,n,t){"use strict";var i=e("./examplesApp");i.config(["$stateProvider","$urlRouterProvider",function(e,n){n.otherwise("/home"),e.state("home",{url:"/home",templateUrl:"partials/partial-home.html"}).state("api",{url:"/api",templateUrl:"partials/partial-api.html"}).state("api.selected",{url:"/api/:selected",templateUrl:function(e){return e.selected+".html"}}).state("contact",{url:"/contact",templateUrl:"partials/partial-contact.html"})}])},{"./examplesApp":22}],24:[function(e,n,t){"use strict";n.exports=angular.module("templates",[]).run(["$templateCache",function(e){e.put("exampleBasic/exampleBasic.html","<div class='parent'>\n  <h2>Basic</h2>\n  <label for='hy'>Move stuff between these two containers. Note how the stuff gets inserted near the mouse pointer? Great stuff.</label>\n  <div class='wrapper' ng-controller=\"Basic\">\n    <div class='container'>\n      <div>Move me, but you can only drop me in one of these containers.</div>\n      <div>If you try to drop me somewhere other than these containers, I'll just come back.</div>\n      <div>Item 3.</div>\n      <div>Item 6.</div>\n    </div>\n    <div class='container'>\n      <div>You can drop me in the left container, otherwise I'll stay here.</div>\n      <div>Item 4.</div>\n      <div>Item 5.</div>\n    </div>\n  </div>\n  <pre>\n        <code>\n// JS\n  controller('Basic', ['$element', 'dragularService', function TodoCtrl($element, dragularService) {\n    dragularService($element.children());\n  }])\n        </code>\n        <code>\n&lt;!-- HTML --&gt;\n  &lt;div class='wrapper' ng-controller=&quot;Basic&quot;\n    &lt;div class='container'&gt;\n        &lt;div&gt;Move me, but you can only drop me in one of these containers.&lt;/div&gt;\n        &lt;div&gt;If you try to drop me somewhere other than these containers, I'll just come back.&lt;/div&gt;\n        &lt;div&gt;Item 3.&lt;/div&gt;\n        &lt;div&gt;Item 6.&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class='container'&gt;\n        &lt;div&gt;You can drop me in the left container, otherwise I'll stay here.&lt;/div&gt;\n        &lt;div&gt;Item 4.&lt;/div&gt;\n        &lt;div&gt;Item 5.&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n        </code>\n      </pre>\n</div>\n"),e.put("exampleBasicWithModel/exampleBasicWithModel.html","<div class='parent'>\n  <h2>Basic - with model</h2>\n  <label for='hy'>Move stuff between these two containers. Note how the stuff gets inserted near the mouse pointer? Great stuff.</label>\n  <div class='wrapper' ng-controller=\"BasicModel\">\n    <div class='tableRow'>\n      <div class='container'>\n        <div ng-repeat=\"item in items1\">{{item.content}}</div>\n      </div>\n      <div class='container'>\n        <div ng-repeat=\"item in items2\">{{item.content}}</div>\n      </div>\n    </div>\n    <div class=\"tableRow\">\n      <div class=\"container\">\n        <div>Items1:\n          <br/>{{items1 | json}}</div>\n      </div>\n      <div class=\"container\">\n        <div>Items2:\n          <br/>{{items2 | json}}</div>\n      </div>\n    </div>\n  </div>\n  <pre>\n        <code>\n// JS\n  controller('BasicModel', ['$scope', '$element', 'dragularService', function TodoCtrl($scope, $element, dragularService) {\n    $scope.items1 = [{\n      content: 'Move me, but you can only drop me in one of these containers.'\n    }, {\n      content: 'If you try to drop me somewhere other than these containers, I\\'ll just come back.'\n    }, {\n      content: 'Item 3'\n    }, {\n      content: 'Item 4'\n    }];\n    $scope.items2 = [{\n      content: 'Item 5'\n    }, {\n      content: 'Item 6'\n    }, {\n      content: 'Item 7'\n    }, {\n      content: 'Item 8'\n    }];\n    var containers = $element.children().children();\n    dragularService([containers[0],containers[1]],{\n      containersModel: [$scope.items1, $scope.items2]\n    });\n  }])\n        </code>\n        <code>\n&lt;!-- HTML --&gt;\n&lt;div class='wrapper' ng-controller=&quot;Basic&quot;\n    &lt;div class='tableRow'&gt;\n        &lt;div class='container'&gt;\n            &lt;div ng-repeat=&quot;item in items1&quot;&gt;{{item.content}}&lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class='container'&gt;\n            &lt;div ng-repeat=&quot;item in items2&quot;&gt;{{item.content}}&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;tableRow&quot;&gt;\n        &lt;div class=&quot;container&quot;&gt;\n            &lt;div&gt;Items1:\n                &lt;br/&gt;{{items1 | json}}&lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;container&quot;&gt;\n            &lt;div&gt;Items2:\n                &lt;br/&gt;{{items2 | json}}&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n        </code>\n      </pre>\n</div>\n"),e.put("exampleBoundingBox/exampleBoundingBox.html","        <div class='parent'>\n            <h2>BoundingBox</h2>\n            <label for='hy'>You can provide element in options.boundingBox to limit crossing element borders.</label>\n            <div class='wrapper' ng-controller=\"BoundingBox\">\n                <div class='container'>\n                    <div>This items cannot cross its example element, just try it your selves.</div>\n                    <div>Item 2.</div>\n                    <div>Item 3.</div>\n                    <div>Item 6.</div>\n                </div>\n                <div class='container'>\n                    <div>This items cannot cross its example element, just try it your selves.</div>\n                    <div>Item 4.</div>\n                    <div>Item 5.</div>\n                </div>\n            </div>\n            <pre>\n        <code>\n  dragularService([$element.children(), {\n    boundingBox: $element\n  });\n        </code>\n      </pre>\n        </div>"),e.put("exampleBoundingBoxLockX/exampleBoundingBoxLockX.html","<div class='parent'>\n            <h2>BoundingBox and lockX</h2>\n            <label for='hy'>Movement can be locked to X or Y axis and also you can provide element in options.boundingBox to limit crossing element borders.</label>\n            <div class='wrapper' ng-controller=\"BoundingBoxLockX\">\n                <div class='containerHorizontal'>\n                    <div class='boundingBox'>\n                        <div class=\"width25\">Items are locked in X axis movement and cannot cross its closest parent div.boundingBox, just try it your selves.</div>\n                        <div class=\"width25\">item 2</div>\n                        <div class=\"width25\">item 3</div>\n                        <div class=\"width25\">item 4</div>\n                    </div>\n                </div>\n            </div>\n            <pre>\n        <code>\n  dragularService([$element.children()[0].children(), {\n    boundingBox: $element.children()[0],\n    lockX: true\n  });\n        </code>\n      </pre>\n        </div>"),e.put("exampleBoundingBoxLockY/exampleBoundingBoxLockY.html","        <div class='parent'>\n            <h2>BoundingBox and LockY</h2>\n            <label for='hy'>Movement can be locked to X or Y axis and also you can provide element in options.boundingBox to limit crossing element borders.</label>\n            <div class='wrapper' ng-controller=\"BoundingBoxLockY\">\n                <div class='container'>\n                    <div class='boundingBox'>\n                        <div>Items are locked in Y axis movement and cannot cross its closest parent div.boundingBox, just try it your selves.</div>\n                        <div>item 2</div>\n                        <div>item 3</div>\n                        <div>item 4</div>\n                        <div>item 5</div>\n                        <div>item 6</div>\n                    </div>\n                </div>\n            </div>\n            <pre>\n        <code>\n  dragularService([$element.children()[0].children(), {\n    boundingBox: $element.children()[0],\n    lockY: true\n  });\n        </code>\n      </pre>\n        </div>"),e.put("exampleCopy/exampleCopy.html","<div class='parent'>\n  <h2>Copy</h2>\n  <label for='hy'>Copying stuff is great too.</label>\n  <div class='wrapper' ng-controller=\"Copy\" ng-hide=\"globals.showModelExamples\">\n    <div id='left2' class='container'>\n      <div>Move me, and make copy on drop.</div>\n      <div>If you try to drop me somewhere other than these containers, I'll just come back.</div>\n    </div>\n    <div id='right2' class='container'>\n      <div>You can drop me in the left container, otherwise I'll stay here.</div>\n    </div>\n  </div>\n  <pre>\n        <code>\n// JS\n  controller('Copy', ['$element', 'dragularService', function TodoCtrl($element, dragularService) {\n    dragularService($element.children(), {\n      copy: true\n    });\n  }])\n        </code>\n        <code>\n&lt;!-- HTML --&gt;\n&lt;div class='wrapper' ng-controller=&quot;Copy&quot; ng-hide=&quot;globals.showModelExamples&quot;&gt;\n    &lt;div id='left2' class='container'&gt;\n      &lt;div&gt;Move me, and make copy on drop.&lt;/div&gt;\n      &lt;div&gt;If you try to drop me somewhere other than these containers, I'll just come back.&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div id='right2' class='container'&gt;\n      &lt;div&gt;You can drop me in the left container, otherwise I'll stay here.&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n        </code>\n      </pre>\n</div>\n"),e.put("exampleCopyWithModel/exampleCopyWithModel.html","<div class='parent'>\n  <h2>Copy - with model</h2>\n  <label for='hy'>Copying stuff is great too.</label>\n  <div class='wrapper' ng-controller=\"CopyModel\">\n    <div class='tableRow'>\n      <div class='container'>\n        <div ng-repeat=\"item in items1\">{{item.content}}</div>\n      </div>\n      <div class='container'>\n        <div ng-repeat=\"item in items2\">{{item.content}}</div>\n      </div>\n    </div>\n    <div class=\"tableRow\">\n      <div class=\"container\">\n        <div>Items1:\n          <br/>{{items1 | json}}</div>\n      </div>\n      <div class=\"container\">\n        <div>Items2:\n          <br/>{{items2 | json}}</div>\n      </div>\n    </div>\n  </div>\n  <pre>\n        <code>\n// JS\n  controller('CopyModel', ['$scope', '$element', 'dragularService', function TodoCtrl($scope, $element, dragularService) {\n    $scope.items1 = [{\n      content: 'Move me, and make copy on drop.'\n    }, {\n      content: 'If you try to drop me somewhere other than these containers, I\\'ll just come back.'\n    }, {\n      content: 'Item 3'\n    }, {\n      content: 'Item 4'\n    }];\n    $scope.items2 = [{\n      content: 'Item 5'\n    }, {\n      content: 'Item 6'\n    }, {\n      content: 'Item 7'\n    }, {\n      content: 'Item 8'\n    }];\n    var containers = $element.children().children();\n    dragularService([containers[0],containers[1]],{\n      containersModel: [$scope.items1, $scope.items2],\n      copy: true\n    });\n  }])\n        </code>\n        <code>\n&lt;!-- HTML --&gt;\n&lt;div class='wrapper' ng-controller=&quot;CopyModel&quot; ng-show=&quot;globals.showModelExamples&quot;&gt;\n    &lt;div class='tableRow'&gt;\n      &lt;div class='container'&gt;\n        &lt;div ng-repeat=&quot;item in items1&quot;&gt;{{item.content}}&lt;/div&gt;\n      &lt;/div&gt;\n      &lt;div class='container'&gt;\n        &lt;div ng-repeat=&quot;item in items2&quot;&gt;{{item.content}}&lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;tableRow&quot;&gt;\n      &lt;div class=&quot;container&quot;&gt;\n        &lt;div&gt;Items1:\n          &lt;br/&gt;{{items1 | json}}&lt;/div&gt;\n      &lt;/div&gt;\n      &lt;div class=&quot;container&quot;&gt;\n        &lt;div&gt;Items2:\n          &lt;br/&gt;{{items2 | json}}&lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n        </code>\n      </pre>\n</div>\n"),e.put("exampleCustomClasses/exampleCustomClasses.html","<div class='parent'>\n    <h2>Custom classes</h2>\n    <label for='hy'>You can overwrite buildin classes by providing classes names in object via options.classes.</label>\n    <div class='wrapper' ng-controller=\"CustomClasses\">\n        <div id='left4' class='container'>\n            <div>Move me, but you can only drop me in one of these containers.</div>\n            <div>If you try to drop me somewhere other than these containers, I'll just come back.</div>\n            <div>Item 3.</div>\n            <div>Item 6.</div>\n        </div>\n        <div id='right3' class='container'>\n            <div>You can drop me in the left container, otherwise I'll stay here.</div>\n            <div>Item 4.</div>\n            <div>Item 5.</div>\n        </div>\n    </div>\n    <pre>\n        <code>\n  dragularService([document.getElementById(left), document.getElementById(right)], { classes: {\n    mirror: 'custom-green-mirror'\n  } });\n\n  // Default classes are:\n  option.classes = {\n    mirror: 'gu-mirror',\n    hide: 'gu-hide',\n    unselectable: 'gu-unselectable',\n    transit: 'gu-transit',\n    overActive: 'gu-over-active',\n    overAccepts: 'gu-over-accept',\n    overDeclines: 'gu-over-decline'\n  };\n        </code>\n      </pre>\n</div>\n"),e.put("exampleDirective/exampleDirective.html","<div class='parent'>\n  <h2>Directive</h2>\n  <label for='hy'>Same as custom classes example, but showing use of directive.</label>\n  <div class='wrapper' ng-controller=\"Directive\">\n    <div class='container' dragular=\"dragularOptions\">\n      <div>Move me, but you can only drop me in one of these containers.</div>\n      <div>If you try to drop me somewhere other than these containers, I'll just come back.</div>\n      <div>Item 3.</div>\n      <div>Item 6.</div>\n    </div>\n    <div class='container' dragular='{\"classes\":{\"mirror\":\"custom-green-mirror\"},\"nameSpace\":\"same\"}'>\n      <div>You can drop me in the left container, otherwise I'll stay here.</div>\n      <div>Item 4.</div>\n      <div>Item 5.</div>\n    </div>\n  </div>\n  <pre>\n        <code>\n// JS\n  controller('Directive', ['$scope', 'dragularService', function TodoCtrl($scope) {\n    $scope.dragularOptions = {\n      classes: {\n        mirror: 'custom-green-mirror'\n      },\n      nameSpace: 'common' // just connecting left and right container\n    };\n  }])\n        </code>\n        <code>\n&lt;!-- HTML --&gt;\n&lt;div class='wrapper' ng-controller=&quot;Directive&quot;&gt;\n    &lt;div class='container' dragular=&quot;dragularOptions&quot;&gt;\n      &lt;div&gt;Move me, but you can only drop me in one of these containers.&lt;/div&gt;\n      &lt;div&gt;If you try to drop me somewhere other than these containers, I'll just come back.&lt;/div&gt;\n      &lt;div&gt;Item 3.&lt;/div&gt;\n      &lt;div&gt;Item 6.&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class='container' dragular='{&quot;classes&quot;:{&quot;mirror&quot;:&quot;custom-green-mirror&quot;},&quot;nameSpace&quot;:&quot;same&quot;}'&gt;\n      &lt;div&gt;You can drop me in the left container, otherwise I'll stay here.&lt;/div&gt;\n      &lt;div&gt;Item 4.&lt;/div&gt;\n      &lt;div&gt;Item 5.&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n        </code>\n      </pre>\n</div>\n"),e.put("exampleDirectiveWithModel/exampleDirectiveWithModel.html","<div class='parent'>\n  <h2>Directive - with model</h2>\n  <label for='hy'>Same as custom classes example, but showing use of directive.</label>\n  <div class='wrapper' ng-controller=\"DirectiveModel\">\n    <div class='tableRow'>\n      <div class='container' dragular=\"dragularOptions\">\n        <div ng-repeat=\"item in items1\">{{item.content}}</div>\n      </div>\n      <div class='container' dragular='{\"containersModel\":\"items2\",\"classes\":{\"mirror\":\"custom-green-mirror\"},\"nameSpace\":\"common\"}'>\n        <div ng-repeat=\"item in items2\">{{item.content}}</div>\n      </div>\n    </div>\n    <div class=\"tableRow\">\n      <div class=\"container\">\n        <div>Items1:\n          <br/>{{items1 | json}}</div>\n      </div>\n      <div class=\"container\">\n        <div>Items2:\n          <br/>{{items2 | json}}</div>\n      </div>\n    </div>\n  </div>\n  <pre>\n       \n        <code>\n// JS\n  controller('DirectiveModel', ['$scope', '$element', 'dragularService', function TodoCtrl($scope, $element, dragularService) {\n    $scope.items1 = [{\n      content: 'Move me, and make copy on drop.'\n    }, {\n      content: 'If you try to drop me somewhere other than these containers, I\\'ll just come back.'\n    }, {\n      content: 'Item 3'\n    }, {\n      content: 'Item 4'\n    }];\n    $scope.items2 = [{\n      content: 'Item 5'\n    }, {\n      content: 'Item 6'\n    }, {\n      content: 'Item 7'\n    }, {\n      content: 'Item 8'\n    }];\n    $scope.dragularOptions = {\n      containersModel: $scope.items1,\n      classes: {\n        mirror: 'custom-green-mirror'\n      },\n      nameSpace: 'common' // just connecting left and right container\n    };\n  }])\n        </code>\n        <code>\n&lt;!-- HTML --&gt;\n &lt;div class='wrapper' ng-controller=&quot;DirectiveModel&quot;&gt;\n  &lt;div class='container' dragular=&quot;dragularOptions&quot;&gt;\n    &lt;div ng-repeat=&quot;item in items1&quot;&gt;{{item.content}}&lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div class='container' dragular='{&quot;containersModel&quot;:&quot;items2&quot;,&quot;classes&quot;:{&quot;mirror&quot;:&quot;custom-green-mirror&quot;},&quot;nameSpace&quot;:&quot;common&quot;}'&gt;\n    &lt;div ng-repeat=&quot;item in items2&quot;&gt;{{item.content}}&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n        </code>\n      </pre>\n</div>\n"),e.put("exampleDragOverClasses/exampleDragOverClasses.html","<div class='parent'>\n  <h2>DragOverClasses</h2>\n  <label for='hy'>You can interact with dragging element by setting dragOverClasses:true in options and adding pointer class (default is: 'gu-over-active') to element you want to be interactive (getting classes). Usually you want to containers show wheather they accepts element or not, but you can use it anywhere. Try to drag over the not-container too.</label>\n  <div class='wrapper' ng-controller=\"DragOverClasses\">\n    <div class='container width25 gu-over-active'>\n      <div>apples and oranges cannot be mixed</div>\n      <div>apple 2</div>\n      <div>apple 3</div>\n      <div>apple 4</div>\n    </div>\n    <div class='container width25 gu-over-active'>\n      <div>orange 1</div>\n      <div>orange 2</div>\n      <div>orange 3</div>\n      <div>orange 4</div>\n    </div>\n    <div class='container width25 gu-over-active'>\n      <div>apple 5</div>\n      <div>apple 6</div>\n      <div>apple 7</div>\n      <div>apple 8</div>\n    </div>\n    <div class='container width25 gu-over-active'>\n      <div>orange 5</div>\n      <div>orange 6</div>\n      <div>orange 7</div>\n      <div>orange 8</div>\n    </div>\n  </div>\n  <div class=\"notContainer gu-over-active\"> Test active class on NOT container.</div>\n\n  <pre>\n    <code>\n&lt;!-- HTML --&gt;\n  &lt;div class='wrapper' ng-controller=&quot;DragOverClasses&quot;&gt;\n    &lt;div class='container width25 gu-over-active'&gt;\n      &lt;div&gt;apples and oranges cannot be mixed&lt;/div&gt;\n      &lt;div&gt;apple 2&lt;/div&gt;\n      ...\n    &lt;/div&gt;\n    &lt;div class='container width25 gu-over-active'&gt;\n      &lt;div&gt;orange 1&lt;/div&gt;\n      &lt;div&gt;orange 2&lt;/div&gt;\n      ...\n    &lt;/div&gt;\n    &lt;div class='container width25 gu-over-active'&gt;\n      &lt;div&gt;apple 5&lt;/div&gt;\n      &lt;div&gt;apple 6&lt;/div&gt;\n      ...\n    &lt;/div&gt;\n    &lt;div class='container width25 gu-over-active'&gt;\n      &lt;div&gt;orange 5&lt;/div&gt;\n      &lt;div&gt;orange 6&lt;/div&gt;\n      ...\n    &lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div class=&quot;notContainer&quot;&gt; Test active class on NOT container.&lt;/div&gt;\n    </code>\n  </pre>\n\n  <pre>\n    <code>\n  // CSS\n.container.gu-over-active.gu-over-accept {\n  background-color: green;\n}\n\n.container.gu-over-active.gu-over-decline {\n  background-color: red;\n}\n\n.notContainer {\n  width: 100%;\n  padding: 2em;\n}\n\n.notContainer.gu-over-active.gu-over-decline {\n  background-color: yellow;\n}\n    </code>\n  </pre>\n\n  <pre>\n    <code>\n  // JS\n  dragularService([$element.children()[0], $element.children()[2]], {\n    nameSpace: 'apples',\n    dragOverClasses: true\n  });\n  dragularService([$element.children()[1], $element.children()[3]], {\n    nameSpace: 'oranges',\n    dragOverClasses: true\n  });\n    </code>\n  </pre>\n</div>\n"),
e.put("exampleEvents/exampleEvents.html","<div class='parent'>\n    <h2>Events</h2>\n    <label for='hy'>Add some fantastic events!</label>\n    <div class='wrapper' ng-controller=\"Events\">\n        <div id='left3' class='container'>\n            <div>Move me, but you can only drop me in one of these containers.</div>\n            <div>If you try to drop me somewhere other than these containers, I'll just come back.</div>\n            <div>Item 3.</div>\n            <div>Item 6.</div>\n        </div>\n        <div id='right3' class='container'>\n            <div>You can drop me in the left container, otherwise I'll stay here.</div>\n            <div>Item 4.</div>\n            <div>Item 5.</div>\n        </div>\n    </div>\n    <pre>\n        <code>\n  dragularService([document.getElementById(left), document.getElementById(right)], {\n    scope: $scope\n  });\n  $scope.$on('drag', function(e, el) {\n    e.stopPropagation();\n    el.className = el.className.replace(' ex-moved', '');\n  });\n  $scope.$on('drop', function(e, el) {\n    e.stopPropagation();\n    $timeout(function() {\n      el.className += ' ex-moved';\n    }, 0);\n  });\n        </code>\n      </pre>\n</div>\n"),e.put("exampleHandle/exampleHandle.html","<div class='parent'>\n    <h2>Handle</h2>\n    <label for='hy'>Drag handles float your cruise?</label>\n    <div class='wrapper' ng-controller=\"Handle\">\n        <div id='left5' class='container'>\n            <div><span class='handle'>+</span>Move me, but you can use the plus sign to drag me around.</div>\n        </div>\n        <div id='right5' class='container'>\n        </div>\n    </div>\n    <pre>\n        <code>\n  dragularService([document.getElementById(left), document.getElementById(right)], {\n    moves: function (el, container, handle) {\n      return handle.className === 'handle';\n    }\n  });\n        </code>\n      </pre>\n</div>\n"),e.put("exampleNameSpaces/exampleNameSpaces.html","        <div class='parent'>\n            <h2>NameSpaces</h2>\n            <label for='hy'>Try to mix apples and oranges. You cannot place apples into oranges, but notice that you can place it into mixed. Mixed can be placed into apples and oranges. Notice that mixed becomes orange or apple if placed into their container. <b>So remember if you are using namespacing, then item is namespaced according to actual container it is placed in. If you need to item preserve thier state you need to use classes in combination with options.accepts and optionally options.isContainer.</b> It depends on setup. (See <a href=\"https://github.com/luckylooke/dragular/issues/9\">issue #9</a>.)</label>\n            <div class='wrapper' ng-controller=\"NameSpaces\">\n                <div class='container width25'>\n                    <div>try to mix oranges and apples</div>\n                    <div>apple 2</div>\n                    <div>apple 3</div>\n                    <div>apple 4</div>\n                </div>\n                <div class='container width25'>\n                    <div>orange 1</div>\n                    <div>orange 2</div>\n                    <div>orange 3</div>\n                    <div>orange 4</div>\n                </div>\n                <div class='container width25'>\n                    <div>apple 5</div>\n                    <div>apple 6</div>\n                    <div>apple 7</div>\n                    <div>apple 8</div>\n                </div>\n                <div class='container width25'>\n                    <div>mixed 1</div>\n                    <div>mixed 2</div>\n                    <div>mixed 3</div>\n                    <div>mixed 4</div>\n                </div>\n            </div>\n            <pre>\n      <code>\ndragularService([$element.children()[0], $element.children()[2]], {\n  nameSpace: 'apples'\n});\ndragularService($element.children()[1], {\n  nameSpace: 'oranges'\n});\ndragularService($element.children()[3], { // mixed\n  nameSpace: ['oranges', 'apples']\n});\n      </code>\n    </pre>\n        </div>"),e.put("exampleNestedNgRepeat/exampleNestedNgRepeat.html","<div class='parent'>\n    <h2>Nested ngRepeat</h2>\n    <label for='hy'> You can move whole rows by grabing row title, all items it selves. Try it out!\n        <hr/>\n        <b>Old IE doesnt support Flexible Box Layout</b> so it can look weird. But in modern browsers it is awsome! Dragular will be working well also in old IE but you have to use different css for layout.\n        <hr/>\n    </label>\n    <div ng-controller=\"NestedNgRepeat\">\n        <div ng-repeat=\"item in items\" class='row'>\n            <div class=\"row-handle\">Row {{$index}}</div>\n            <div ng-repeat=\"item in item.items\" class=\"cell\">{{item.content}}</div>\n        </div>\n    </div>\n    <pre>\n        <code>\n  // HTML\n\n  &lt;div ng-controller=&quot;Example15&quot;&gt;\n    &lt;div ng-repeat=&quot;item in items&quot; class='row'&gt;\n      &lt;div class=&quot;row-handle&quot;&gt;Row {{$index}}&lt;/div&gt;\n      &lt;div ng-repeat=&quot;item in item.items&quot; class=&quot;cell&quot;&gt;{{item.content}}&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n        </code>\n      </pre>\n    <pre>\n        <code>\n  // CSS\n\n  .row {\n    display: flex;\n    flex-direction: row;\n  }\n\n  .cell {\n    flex-grow: 1;\n  }\n\n  .row,\n  .cell {\n    margin: 10px;\n    padding: 10px;\n    background-color: rgba(0, 0, 0, 0.2);\n  }\n        </code>\n      </pre>\n    <pre>\n        <code>\n  // JS\n\n  $timeout(function() { // timeount due to ngRepeat to be ready\n    dragularService($element, {\n      moves: function(el, container, handle) {\n        return handle.classList.contains('row-handle');\n      }\n    });\n    dragularService($element.children(), {\n      moves: function(el, container, handle) {\n        return !handle.classList.contains('row-handle');\n      }\n    });\n  }, 0);\n  $scope.items = [{\n    items: [{\n      content: 'Item a1'\n    }, {\n      content: 'Item a2'\n    }, {\n      content: 'Item a3'\n    }, {\n      content: 'Item a4'\n    }]\n  }, {\n    items: [{\n      content: 'Item b1'\n    }, {\n      content: 'Item b2'\n    }, {\n      content: 'Item b3'\n    }, {\n      content: 'Item b4'\n    }]\n  }, {\n    items: [{\n      content: 'Item c1'\n    }, {\n      content: 'Item c2'\n    }, {\n      content: 'Item c3'\n    }, {\n      content: 'Item c4'\n    }]\n  }];\n        </code>\n      </pre>\n</div>\n"),e.put("exampleNestedNgRepeatWithModel/exampleNestedNgRepeatWithModel.html","<div class='parent'>\n  <h2>Nested ngRepeat - with model</h2>\n  <label for='hy'> You can move whole rows by grabing row title, all items it selves. Try it out!\n    <hr/>\n    <b>Old IE doesnt support Flexible Box Layout</b> so it can look weird. But in modern browsers it is awsome! Dragular will be working well also in old IE but you have to use different css for layout.\n    <hr/>\n  </label>\n  <div ng-controller=\"NestedNgRepeatWithModel\">\n    <div class='tableRow'>\n      <div class='container'>\n        <div ng-repeat=\"item in items\" class='row'>\n          <div class=\"row-handle\">Row {{::$index}}</div>\n          <div class=\"row cell containerNested\">\n            <div ng-repeat=\"item in item.items\" class=\"cell\">{{item.content}}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"tableRow\">\n      <div class=\"container\">\n        <pre>\n            <div>Items:\n              <br/>{{items | json}}</div>\n        </pre>\n      </div>\n    </div>\n  </div>\n  <pre>\n    <code>\n&lt;!-- HTML --&gt;\n&lt;div ng-controller=&quot;NestedNgRepeatWithModel&quot;&gt;\n  &lt;div class='container'&gt;\n    &lt;div ng-repeat=&quot;item in items&quot; class='row'&gt;\n      &lt;div class=&quot;row-handle&quot;&gt;Row {{::$index}}&lt;/div&gt;\n      &lt;div class=&quot;row cell containerNested&quot;&gt;\n        &lt;div ng-repeat=&quot;item in item.items&quot; class=&quot;cell&quot;&gt;{{item.content}}&lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n    </code>\n  </pre>\n  <pre>\n    <code>\n  // CSS\n\n  .row {\n    display: flex;\n    flex-direction: row;\n  }\n\n  .cell {\n    flex-grow: 1;\n  }\n\n  .row,\n  .cell {\n    margin: 10px;\n    padding: 10px;\n    background-color: rgba(0, 0, 0, 0.2);\n  }\n    </code>\n  </pre>\n  <pre>\n    <code>\n  // JS\ncontroller('NestedNgRepeatWithModel', ['$timeout', '$scope', '$element', 'dragularService', function TodoCtrl($timeout, $scope, $element, dragularService) {\n    $timeout(function() { // timeount due to nested ngRepeat to be ready\n      var container = $element.children().eq(0).children(),\n        parentContainers = container.children(),\n        nestedContainers = [];\n\n      dragularService(container, {\n        moves: function(el, container, handle) {\n          return handle.classList.contains('row-handle');\n        },\n        containersModel: $scope.items\n      });\n\n      // collect nested contianers\n      for (var i = 0; i < parentContainers.length; i++) {\n        nestedContainers.push(parentContainers.eq(i).children()[1]);\n      };\n\n      dragularService(nestedContainers, {\n        moves: function(el, container, handle) {\n          return !handle.classList.contains('row-handle');\n        },\n        containersModel: (function getNestedContainersModel(){\n          var parent = $scope.items,\n            containersModel = [];\n          for (var i = 0; i < parent.length; i++) {\n            containersModel.push(parent[i].items);\n          };\n          return containersModel;\n        })()\n      });\n    }, 0);\n    $scope.items = [{\n      items: [{\n        content: 'Item a1'\n      }, {\n        content: 'Item a2'\n      }, {\n        content: 'Item a3'\n      }, {\n        content: 'Item a4'\n      }]\n    }, {\n      items: [{\n        content: 'Item b1'\n      }, {\n        content: 'Item b2'\n      }, {\n        content: 'Item b3'\n      }, {\n        content: 'Item b4'\n      }]\n    }, {\n      items: [{\n        content: 'Item c1'\n      }, {\n        content: 'Item c2'\n      }, {\n        content: 'Item c3'\n      }, {\n        content: 'Item c4'\n      }]\n    }];\n  }])\n    </code>\n  </pre>\n</div>\n"),e.put("exampleNgRepeat/exampleNgRepeat.html","        <div class='parent'>\n            <h2>ngRepeat</h2>\n            <label for='hy'>Example of using ng-repeat with dragular and adding/removing items dynamicaly.</label>\n            <div class='wrapper' ng-controller=\"NgRepeat\">\n                <div class='container'>\n                    <div ng-repeat=\"item in items\">\n                        {{item.content}}\n                        <button class='cursorDefault' ng-click=\"addItem()\">+</button>\n                        <button class='cursorDefault' ng-click=\"removeItem()\">x</button>\n                    </div>\n                </div>\n            </div>\n            <pre>\n        <code>\n  // HTML:\n  &lt;div class='container'&gt;\n    &lt;div ng-repeat=&quot;item in items&quot;&gt;\n      {{item.content}}\n      &lt;button class='cursorDefault' ng-click=&quot;addItem()&quot;&gt;+&lt;/button&gt;\n      &lt;button class='cursorDefault' ng-click=&quot;removeItem()&quot;&gt;x&lt;/button&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n\n  // JS:\n  dragularService($element.children());\n  $scope.items = [{\n    content: 'Try to add or remove some elements (click on +- buttons), you will see that it is not problem for dragular.'\n  },{\n    content: 'Item 2'\n  },{\n    content: 'Item 3'\n  },{\n    content: 'Item 4'\n  }];\n  $scope.addItem = function addItem () {\n    var index = $scope.items.indexOf(this.item) + 1;\n    $scope.items.splice(index, 0,{content: this.item.content + '-copy'});\n  }\n  $scope.removeItem = function removeItem () {\n    var index = $scope.items.indexOf(this.item);\n    $scope.items.splice(index, 1);\n  }\n        </code>\n      </pre>\n        </div>\n"),e.put("exampleNgRepeatWithModel/exampleNgRepeatWithModel.html","<div class='parent'>\n  <h2>ngRepeat - with model</h2>\n  <label for='hy'>Example of using ng-repeat with dragular and adding/removing items dynamicaly.</label>\n  <div class='wrapper' ng-controller=\"NgRepeatWithModel\">\n    <div class='tableRow'>\n      <div class='container'>\n        <div ng-repeat=\"item in items\">\n          {{item.content}}\n          <button class='cursorDefault' ng-click=\"addItem()\">+</button>\n          <button class='cursorDefault' ng-click=\"removeItem()\">x</button>\n        </div>\n      </div>\n    </div>\n    <div class=\"tableRow\">\n      <div class=\"container\">\n        <div>Items:\n          <br/>{{items | json}}</div>\n      </div>\n    </div>\n  </div>\n  <pre>\n    <code>\n  // HTML:\n   &lt;div class='wrapper' ng-controller=&quot;NgRepeatWithModel&quot;&gt;\n      &lt;div class='container'&gt;\n        &lt;div ng-repeat=&quot;item in items&quot;&gt;\n          {{item.content}}\n          &lt;button class='cursorDefault' ng-click=&quot;addItem()&quot;&gt;+&lt;/button&gt;\n          &lt;button class='cursorDefault' ng-click=&quot;removeItem()&quot;&gt;x&lt;/button&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n    </code>\n  </pre>\n  <pre>\n    <code>\n  // JS:\n  controller('NgRepeatWithModel', ['$scope', '$element', 'dragularService', function TodoCtrl($scope, $element, dragularService) {\n    $scope.items = [{\n      content: 'Try to add or remove some elements (click on +- buttons), you will see that it is not problem for dragular.'\n    }, {\n      content: 'Item 2'\n    }, {\n      content: 'Item 3'\n    }, {\n      content: 'Item 4'\n    }];\n    dragularService($element.children().eq(0).children(), {containersModel: $scope.items});\n    $scope.addItem = function addItem() {\n      var index = $scope.items.indexOf(this.item) + 1;\n      $scope.items.splice(index, 0, {\n        content: this.item.content + '-copy'\n      });\n    };\n    $scope.removeItem = function removeItem() {\n      var index = $scope.items.indexOf(this.item);\n      $scope.items.splice(index, 1);\n    };\n  }])\n    </code>\n  </pre>\n</div>\n"),e.put("exampleRemoveOnSpill/exampleRemoveOnSpill.html","        <div class='parent'>\n            <h2>Remove on spill</h2>\n            <label for='hy'>Need to be able to quickly delete stuff when it spills out of the chosen containers?</label>\n            <div class='wrapper' ng-controller=\"RemoveOnSpill\">\n                <div id='single1' class='container'>\n                    <div>Move me, but you can only drop me somewhere in this container.</div>\n                    <div>If you try to drop me somewhere other than here, I'll die a fiery death.</div>\n                    <div>Item 3.</div>\n                    <div>Item 6.</div>\n                    <div>Item 4.</div>\n                    <div>Item 5.</div>\n                </div>\n            </div>\n            <pre>\n        <code>\n  dragularService([document.getElementById(single)], { removeOnSpill: true });\n        </code>\n      </pre>\n        </div>"),e.put("exampleRevertOnSpill/exampleRevertOnSpill.html","        <div class='parent'>\n            <h2>Revert on spill</h2>\n            <label for='hy'>By default, dropping an element outside of any known containers will keep the element in the last place it hovered over. You can make elements go back home if they're dropped outside of known containers, too.</label>\n            <div class='wrapper' ng-controller=\"RevertOnSpill\">\n                <div id='left4' class='container'>\n                    <div>Move me, but you can only drop me in one of these containers.</div>\n                    <div>If you try to drop me somewhere other than these containers, I'll just come back.</div>\n                    <div>Item 3.</div>\n                    <div>Item 6.</div>\n                </div>\n                <div id='right4' class='container'>\n                    <div>You can drop me in the left container, otherwise I'll stay here.</div>\n                    <div>Item 4.</div>\n                    <div>Item 5.</div>\n                </div>\n            </div>\n            <pre>\n        <code>\n  dragularService([document.getElementById(left), document.getElementById(right)], { revertOnSpill: true });\n        </code>\n      </pre>\n        </div>"),e.put("exampleScrollingDrag/exampleScrollingDrag.html","<div class='parent'>\n    <h2>Scrolling drag</h2>\n    <label for='hy'> Containre can be scrolled by hovering dragged item over most top visible item or most bottom, scroll direction respectively.\n    </label>\n    <div ng-controller=\"ScrollingDrag\">\n        <div class=\"container heightLimit\">\n            <div>Item 1</div>\n            <div>Item 2</div>\n            <div>Item 3.</div>\n            <div>Item 4.</div>\n            <div>Item 5.</div>\n            <div>Item 6.</div>\n            <div>Item 7.</div>\n            <div>Item 9.</div>\n            <div>Item 10.</div>\n            <div>Item 11.</div>\n            <div>Item 12.</div>\n            <div>Item 13.</div>\n        </div>\n    </div>\n</div>\n")}])},{}],25:[function(e,n,t){"use strict";var i=e("./dragularModule");i.directive("dragular",["dragularService",function(e){return{restrict:"A",link:function(n,t,i){function o(e){try{return JSON.parse(e)}catch(n){return void 0}}var l=n[i.dragular]||o(i.dragular);l&&l.containersModel&&"string"==typeof l.containersModel&&(l.containersModel=n.$eval(l.containersModel)),e(t[0],l)}}}])},{"./dragularModule":26}],26:[function(e,n,t){"use strict";n.exports=angular.module("dragularModule",[]),{dragularDirective:e("./dragularDirective.js"),dragularService:e("./dragularService.js")}},{"./dragularDirective.js":25,"./dragularService.js":27}],27:[function(e,n,t){"use strict";var i=e("./dragularModule");i.factory("dragularService",["$rootScope","$timeout",function(e,n){function t(e,n,t,i){var o={mouseup:"touchend",mousedown:"touchstart",mousemove:"touchmove"},l=angular.element(e);"wheel"!==t&&l[n](o[t],i),l[n](t,i)}function i(){return!1}function o(){return!0}function l(e){function n(){var n=e;do n=n.nextSibling;while(n&&1!==n.nodeType);return n}return e.nextElementSibling||n()}function a(e){return"object"==typeof HTMLElement?e instanceof HTMLElement:e&&"object"==typeof e&&null!==e&&1===e.nodeType&&"string"==typeof e.nodeName}function r(e,n){-1===e.className.indexOf(" "+n)&&(e.className+=" "+n)}function s(e,n){angular.element(e).removeClass(n)}function c(e,n){return(" "+e.className+" ").indexOf(" "+n+" ")>-1}function d(e){return e.targetTouches&&e.targetTouches.length?e.targetTouches[0]:e.changedTouches&&e.changedTouches.length?e.changedTouches[0]:e}function m(e,n){var t=d(n),i={pageX:"clientX",pageY:"clientY"};return e in i&&!(e in t)&&i[e]in t&&(e=i[e]),t[e]}function p(e){return e.width||e.right-e.left}function v(e){return e.height||e.bottom-e.top}function u(e,n){return Array.prototype.indexOf.call(angular.element(n).children(),e)}var g,h={},x={};return function(d,f){function y(e,n,t,i){n[t]||(n[t]=[]),Array.prototype.push.apply(n[t],i),e[t]=n[t]}function b(e){if(Array.isArray(e))return e;if(e.length){for(var n=e.length,t=[];n;)n--,t.push(e[n]);return t}return[e]}function I(e){return function(n){var t=Array.isArray(n)?n:b(n);t.forEach(function(n){Be.nameSpace?angular.forEach(Be.nameSpace,function(t,i){"add"===e?(Ie[i].push(n),console.warn&&void 0):(Ie[i].splice(Ie.indexOf(n),1),console.warn&&void 0)}):"add"===e?(Ie.push(n),console.warn&&void 0):(Ie.splice(Ie.indexOf(n),1),console.warn&&void 0)})}}function w(e){return-1!==Me.containers.indexOf(e)||Be.isContainer(e)}function S(e){var n;for(n in Me.containers)if(Me.containers.hasOwnProperty(n)&&-1!==Me.containers[n].indexOf(e))return!0;return!1}function B(e){var n=e?"off":"on";t(be,n,"mouseup",O),d.forEach(function(e){t(e,"on","mousedown",$)})}function M(){B(!0),Me.removeContainer(Ie),O({})}function $(e){e=e||window.event;var t=e.target;if(!(0!==e.which&&1!==e.which||e.metaKey||e.ctrlKey)&&C(t)===!0){if(!Be.direction){var i=t.parentElement,o=i.offsetHeight,l=i.offsetWidth,a=t.clientHeight,r=t.clientWidth;Be.direction=l/r>o/a?"horizontal":"vertical"}var s=F(K);ee=m("pageX",e)-s.left,ne=m("pageY",e)-s.top,oe=m("clientX",e),le=m("clientY",e),Be.boundingBox&&(te=m("pageX",e)-s.right,ie=m("pageY",e)-s.bottom),"number"==typeof Be.delay?he=n(function(){N(e)},Be.delay):N(e),e.preventDefault()}}function N(e){H(),g.style.left=oe-ee+"px",g.style.top=le-ne+"px",L(e)}function C(e){var n=e;if(Me.dragging&&g)return!1;if(xe(e))return!1;for(;!xe(e.parentElement);){if(Be.invalid(e,n))return!1;if(e=e.parentElement,!e)return}if(Be.invalid(e,n))return!1;var t=e.parentElement;if(!Be.moves(e,t,n,Q,_))return!1;if(R(),Be.containersModel){var i=d.indexOf(t),o=u(e,t);de=me=o,_=Be.containersModel[i],V=_,Q=_[o],Be.copy&&(ge=angular.copy(Q))}return Be.copy?(ue=e.cloneNode(!0),r(ue,Be.classes.transit),Be.scope&&Be.scope.$emit("cloned",ue,e,ge,Q)):r(e,Be.classes.transit),G=t,K=e,se=ce=l(e),Me.dragging=!0,Be.scope&&Be.scope.$emit("drag",K,G),!0}function q(e){return"A"===e.tagName||"BUTTON"===e.tagName}function R(){if(Me.dragging){var e=ue||K;k(e,e.parentElement)}}function O(e){if(Me.dragging){e=e||window.event,oe=m("clientX",e),le=m("clientY",e);var n=ue||K,t=z(g,oe,le),i=W(t,oe,le);!i||Be.copy!==!1&&i===G?Be.removeOnSpill?j():D():k(n,i),fe=null,Be.dragOverClasses&&pe&&(s(pe,ve),pe=null)}}function k(e,n){Be.scope&&E(n)?Be.scope.$emit("cancel",e,G,ge||Q,_,V):Be.scope&&Be.scope.$emit("drop",e,n,G,ge||Q,_,V),A()}function j(){if(Me.dragging){var e=ue||K,n=e.parentElement;if(Be.containersModel){var t=ge||Q;V.splice(V.indexOf(t),1)}else n&&n.removeChild(e);Be.scope&&Be.scope.$emit(Be.copy?"cancel":"remove",e,n,t,_,V),A()}}function D(e){if(Me.dragging){var n=arguments.length>0?e:Be.revertOnSpill,t=ue||K,i=t.parentElement;i===G&&Be.copy&&(Be.containersModel?V.splice(V.indexOf(ge),1,ge):i.removeChild(ue));var o=E(i);o===!1&&Be.copy===!1&&n&&(Be.containersModel?(Z=V,V=_,T(de)):G.insertBefore(t,se)),Be.scope&&(o||n)?Be.scope.$emit("cancel",t,G):Be.scope&&Be.scope.$emit("drop",t,i,G),A()}}function A(){var e=ue||K;X(),e&&s(e,Be.classes.transit),he&&n.cancel(he),G=K=ue=se=ce=_=null,Q=ge=de=me=he=null,Me.dragging=!1,Be.scope&&Be.scope.$emit("dragend",e)}function E(e,n){var t=n||(g?ce:l(K||ue));return e===G&&t===se}function W(e,n,t){function i(){var i=!1;if(xe(o)){fe=o;var l=J(o,e),a=P(o,l,n,t),d=E(o,a);if(i=d?!0:Be.accepts(K,o,G,a,Q,_),i&&Be.containersModel)if(Z=V,Be.nameSpace){for(var m in Me.containers)if(Me.containers.hasOwnProperty(m)&&-1!==Me.containers[m].indexOf(o)){Z=V,V=we[m][Me.containers[m].indexOf(o)];break}}else V=we[Me.containers.indexOf(o)]}return Be.dragOverClasses&&c(o,Be.classes.overActive)&&o!==pe&&(pe&&s(pe,ve),ve=i?Be.classes.overAccepts:Be.classes.overDeclines,r(o,ve),pe=o),i}for(var o=e;o&&!i();)o=o.parentElement;return o}function L(n){if(g){n=n||window.event,oe=m("clientX",n),le=m("clientY",n);var t,i,o,a=oe-ee,r=le-ne;Be.boundingBox&&(t=m("pageX",n),i=m("pageY",n),o=F(Be.boundingBox)),Be.lockY||(!Be.boundingBox||t>o.left+ee&&t<o.right+te?g.style.left=a+"px":Be.boundingBox&&(g.style.left=t<o.left+ee?oe-(t-o.left)+"px":oe-ae-(t-o.right)+"px")),Be.lockX||(!Be.boundingBox||i>o.top+ne&&i<o.bottom+ie?g.style.top=r+"px":Be.boundingBox&&(g.style.top=i<o.top+ne?le-(i-o.top)+"px":le-re-(i-o.bottom)+"px"));var s=ue||K,c=z(g,oe,le),d=W(c,oe,le);if(d===G&&Be.copy)return s.parentElement&&s.parentElement.removeChild(s),-1!==Z.indexOf(ge)&&Z.splice(Z.indexOf(ge),1),void e.$applyAsync();var p,v=J(d,c);if(Be.containersModel)var h;if(null!==v)p=P(d,v,oe,le),Be.containersModel&&(h=p?u(p,d):null);else{if(Be.revertOnSpill!==!0||Be.copy)return void(!Be.copy&&Be.removeOnSpill!==!0||null===s.parentElement||(Be.containersModel?(V.splice(h,1),e.$applyAsync()):s.parentElement.removeChild(s)));p=se,d=G,Be.containersModel&&(h=de,Z=V,V=_)}(null===p||p!==s&&p!==l(s))&&(ce=p,Be.containersModel?T(h):d.insertBefore(s,p),Be.scope&&Be.scope.$emit("shadow",s,d))}}function T(n){if(Z===V){null===n&&(n=V.length);var t=n>me?n-1:n;V.splice(t,0,Z.splice(me,1)[0]),me=t}else null===n&&(n=V.length-1),Be.copy&&Z===_||Z.splice(me,1),Be.copy&&-1!==V.indexOf(ge)||(V.splice(n,0,ge||Q),me=n);e.$applyAsync()}function Y(e){fe&&(fe.scrollTop+=e.deltaY)}function H(){if(!g){var e=K.getBoundingClientRect();g=K.cloneNode(!0),ae=e.width,re=e.height,g.style.width=p(e)+"px",g.style.height=v(e)+"px",s(g,Be.classes.transit),r(g,Be.classes.mirror),ye.appendChild(g),t(be,"on","mousemove",L),r(ye,Be.classes.unselectable),t(g,"on","wheel",Y),Be.scope&&Be.scope.$emit("cloned",g,K)}}function X(){g&&(s(ye,Be.classes.unselectable),t(be,"off","mousemove",L),t(g,"off","wheel",Y),g.parentElement.removeChild(g),g=null)}function J(e,n){for(var t=n;t!==e&&t.parentElement!==e;)t=t.parentElement;return t===be?null:t}function P(e,n,t,i){function o(){var n,o,l,a=e.children.length;for(n=0;a>n;n++){if(o=e.children[n],l=o.getBoundingClientRect(),s&&l.left>t)return o;if(!s&&l.top>i)return o}return null}function a(){var e=n.getBoundingClientRect();return r(s?t>e.left+p(e)/2:i>e.top+v(e)/2)}function r(e){return e?l(n):n}var s="horizontal"===Be.direction,c=n!==e?a():o();return c}function U(e,n){return"undefined"!=typeof window[n]?window[n]:be.clientHeight?be[e]:ye[e]}function F(e){var n=e.getBoundingClientRect(),t=U("scrollTop","pageYOffset"),i=U("scrollLeft","pageXOffset");return{left:n.left+i,right:n.right+i,top:n.top+t,bottom:n.bottom+t}}function z(e,n,t){if(!n&&!t)return null;var i,o=e||{},l=o.className;return o.className+=" "+Be.classes.hide,i=document.elementFromPoint(n,t),o.className=l,i}1!==arguments.length||Array.isArray(d)||angular.isElement(d)||d[0]||(f=d,d=[]);var G,K,_,Q,V,Z,ee,ne,te,ie,oe,le,ae,re,se,ce,de,me,pe,ve,ue,ge,he,xe,fe,ye=document.body,be=document.documentElement,Ie={},we={},Se={mirror:"gu-mirror",hide:"gu-hide",unselectable:"gu-unselectable",transit:"gu-transit",overActive:"gu-over-active",overAccepts:"gu-over-accept",overDeclines:"gu-over-decline"},Be={classes:Se,containers:!1,moves:o,accepts:o,isContainer:i,copy:!1,delay:!1,invalid:q,revertOnSpill:!1,removeOnSpill:!1,dragOverClasses:!1,lockX:!1,lockY:!1,boundingBox:!1,containersModel:!1};a(Be.boundingBox)||(Be.boundingBox=null),f&&f.classes&&(angular.extend(Se,f.classes),angular.extend(f.classes,Se)),angular.extend(Be,f),Be.delay===!0&&(Be.delay=300),d=Be.containers||(d?b(d):[]),Be.containers&&(d=b(d)),Be.containersModel&&(Be.containersModel=Array.isArray(Be.containersModel[0])?Be.containersModel:[Be.containersModel]),Be.nameSpace?(Array.isArray(Be.nameSpace)||(Be.nameSpace=[Be.nameSpace]),Be.nameSpace.forEach(function(e){y(Ie,h,e,d),Be.containersModel&&y(we,x,e,Be.containersModel)}),xe=S):(Ie=d,xe=w,Be.containersModel&&(we=Be.containersModel)),B();var Me={addContainer:I("add"),removeContainer:I("remove"),containers:Ie,start:C,end:R,cancel:D,remove:j,destroy:M,dragging:!1};return Me}}])},{"./dragularModule":26}]},{},[22]);
//# sourceMappingURL=examples.min.js.map